<UserControl x:Class="ProtectTheInnocent.Views.Documents.DocumentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:ProtectTheInnocent.Behaviors"
             xmlns:controls="clr-namespace:ProtectTheInnocent.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:documentViewModels="clr-namespace:ProtectTheInnocent.ViewModels.Documents"
             xmlns:documentViews="clr-namespace:ProtectTheInnocent.Views.Documents"
             xmlns:enums="clr-namespace:Application.Enums"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DataContext="{d:DesignInstance documentViewModels:DocumentViewModel}"
             d:DesignHeight="70"
             d:DesignWidth="1024"
             mc:Ignorable="d">
  <UserControl.Resources>
    <SolidColorBrush x:Key="DocumentForegroundBrush" Color="#333" />
    <SolidColorBrush x:Key="DocumentHoverBrush" Color="#F5F5F5" />
    <SolidColorBrush x:Key="DocumentBorderBrush" Color="#DDD" />

    <Style x:Key="EmptySetterStyle" TargetType="Border" />
    <Style x:Key="SingleSetterStyle" TargetType="Border">
      <!--  Test: Verify that comments are kept  -->
      <Setter Property="BorderBrush" Value="{StaticResource DocumentBorderBrush}" />
      <!--  Test: Verify that comments are kept at bottom  -->
    </Style>
    <Style x:Key="DocumentTableStyle" TargetType="Border">
      <Setter Property="BorderThickness" Value="0.5" />
      <Setter Property="BorderBrush" Value="{StaticResource DocumentBorderBrush}" />
    </Style>
    <!--  Test: Verify that custom nodes are not reordered despite containing setters  -->
    <SomeCustomElement x:Key="DocumentTableStyle" TargetType="Border">
      <Setter Property="BorderThickness" Value="0.5" />
      <Setter Property="BorderBrush" Value="{StaticResource DocumentBorderBrush}" />
    </SomeCustomElement>
    <Style x:Key="DocumentTableTextStyle" TargetType="FrameworkElement">
      <!--  Test: Verify that comments are moved with VerticalAlignment element  -->
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="TextBlock.Foreground" Value="{StaticResource DocumentForegroundBrush}" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <!--  Test: Verify that comments are moved with Margin element  -->
      <Setter Property="Margin" Value="8" />
      <!--  Test: Verify that comments are not moved from last position  -->
    </Style>
    <Style x:Key="GridHooverStyle" TargetType="Grid">
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Background" Value="{StaticResource DocumentHoverBrush}" />
          <Setter Property="Foreground" Value="{StaticResource DocumentForegroundHoverBrush}" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="QuestionDisplayTextStyle" TargetType="TextBlock">
      <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif" />
      <Setter Property="FontSize" Value="14" />
      <Setter Property="Foreground" Value="{StaticResource QuestionnaireColorBrush}" />
      <Setter Property="TextWrapping" Value="Wrap" />
      <Setter Property="MaxWidth" Value="215" />
      <Setter Property="Margin" Value="0,0,10,0" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <!--  Different styling when used from QuickSizing  -->
      <Style.Triggers>
        <DataTrigger Binding="{Binding QuestionOwnerType}" Value="{x:Type sizingViewModels:QuickSizingViewModel}">
          <Setter Property="HorizontalAlignment" Value="Right" />
          <Setter Property="FontStyle" Value="Italic" />
          <Setter Property="TextAlignment" Value="Right" />
          <Setter Property="MaxWidth" Value="100" />
        </DataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding QuestionOwnerType}" Value="{x:Type sizingViewModels:QuickSizingViewModel}" />
            <Condition Binding="{Binding SettingsViewModel.WindowSize, Source={StaticResource ViewModelLocator}}">
              <Condition.Value>
                <enums:WindowSize>MediumSmall</enums:WindowSize>
              </Condition.Value>
            </Condition>
          </MultiDataTrigger.Conditions>
          <Setter Property="HorizontalAlignment" Value="Left" />
          <Setter Property="TextAlignment" Value="Left" />
          <Setter Property="MaxWidth" Value="{x:Static sys:Double.PositiveInfinity}" />
        </MultiDataTrigger>
        <DataTrigger Binding="{Binding SettingsViewModel.WindowSize, Source={StaticResource ViewModelLocator}}">
          <DataTrigger.Value>
            <enums:WindowSize>Small</enums:WindowSize>
          </DataTrigger.Value>
          <Setter Property="HorizontalAlignment" Value="Left" />
          <Setter Property="TextAlignment" Value="Left" />
          <Setter Property="MaxWidth" Value="{x:Static sys:Double.PositiveInfinity}" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TabControl}">
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="Padding" Value="4,4,4,4" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
      <Setter Property="Background" Value="{StaticResource TabBackgroundBrush}" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TabControl}">
            <Grid ClipToBounds="true"
                  KeyboardNavigation.TabNavigation="Local"
                  SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ColumnDefinition0" />
                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                <RowDefinition x:Name="RowDefinition1" Height="*" />
              </Grid.RowDefinitions>
              <TabPanel x:Name="HeaderPanel"
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="0,0,0,-1"
                        Panel.ZIndex="1"
                        Cursor="No"
                        IsItemsHost="true"
                        KeyboardNavigation.TabIndex="1" />
              <Border x:Name="ContentPanel"
                      Grid.Row="1"
                      Grid.Column="0"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      KeyboardNavigation.DirectionalNavigation="Contained"
                      KeyboardNavigation.TabIndex="2"
                      KeyboardNavigation.TabNavigation="Local">
                <ContentPresenter x:Name="PART_SelectedContentHost"
                                  Margin="{TemplateBinding Padding}"
                                  ContentSource="SelectedContent"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="TabStripPlacement" Value="Top">
                <!--<Setter Property="Height" TargetName="HeaderPanel" Value="38" />-->
              </Trigger>
              <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                <Setter TargetName="HeaderPanel" Property="Margin" Value="0,-1,0,0" />
                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
              </Trigger>
              <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Margin" Value="0,0,-1,0" />
                <Setter TargetName="HeaderPanel" Property="Width" Value="103" />
                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              </Trigger>
              <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                <Setter TargetName="HeaderPanel" Property="Margin" Value="-1,0,0,0" />
                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TabItem}">
            <Grid HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  SnapsToDevicePixels="true">
              <Border Name="Border"
                      Background="{StaticResource TabEnabledBackgroundBrush}"
                      BorderBrush="{StaticResource LightBorderBrush}"
                      BorderThickness="1"
                      CornerRadius="0">
                <ContentPresenter x:Name="ContentSite"
                                  Margin="15,10,15,10"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="TabStripPlacement" Value="Top">
                <!--<Setter TargetName="ContentSite" Property="Height" Value="38" />-->
                <Setter TargetName="Border" Property="Margin" Value="0,0,0,-1" />
              </Trigger>
              <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="Border" Property="Margin" Value="0,0,-1,0" />
                <Setter TargetName="ContentSite" Property="Height" Value="95" />
                <Setter TargetName="ContentSite" Property="Margin" Value="0" />
              </Trigger>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource TabMouseOverForegroundBrush}" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource TabMouseOverBackgroundBrush}" />
              </Trigger>
              <Trigger Property="IsSelected" Value="True">
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
                <Setter Property="TextBlock.FontWeight" Value="Bold" />
                <Setter Property="TextBlock.Foreground" Value="{StaticResource TabSelectedForegroundBrush}" />
                <Setter TargetName="Border" Property="Cursor" Value="Pen" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource TabBackgroundBrush}" />
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="True" />
                  <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Margin" Value="42" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="True" />
                  <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />
              </MultiTrigger>
              <Trigger Property="IsEnabled" Value="True">
                <Setter TargetName="Border" Property="Cursor" Value="Hand" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource TabDisabledForegroundBrush}" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource TabDisabledBackgroundBrush}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>
  <Grid Style="{StaticResource GridHooverStyle}" ToolTip="{Binding Description}">
    <i:Interaction.Behaviors>
      <behaviors:CommandBehavior Command="{Binding ToggleCheckBoxCommand}" />
      <behaviors:CommandBehavior Command="{Binding DataContext.RecalculateAllIsCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type documentViews:DocumentsView}}}" />
    </i:Interaction.Behaviors>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="40" SharedSizeGroup="LitCheckBox" />
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="Auto" SharedSizeGroup="LitLang" />
      <ColumnDefinition Width="Auto" SharedSizeGroup="LitCat" />
      <ColumnDefinition Width="Auto" SharedSizeGroup="LitProdType" />
      <ColumnDefinition Width="Auto" SharedSizeGroup="LitDate" />
    </Grid.ColumnDefinitions>

    <Border Grid.Column="0" Style="{StaticResource DocumentTableStyle}">
      <CheckBox Margin="10,0,0,0"
                Command="{Binding DataContext.RecalculateAllIsCheckedCommand,
                                  RelativeSource={RelativeSource FindAncestor,
                                                                 AncestorType={x:Type documentViews:DocumentsView}}}"
                IsChecked="{Binding IsChecked}" />
    </Border>
    <Border Grid.Column="1" Style="{StaticResource DocumentTableStyle}">
      <TextBlock Margin="8"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Center">
        <Hyperlink Command="{Binding DocumentClickCommand}" Style="{StaticResource HyperlinkStyle}">
          <TextBlock Text="{Binding Title}" />
        </Hyperlink>
      </TextBlock>
    </Border>
    <Border Grid.Column="2" Style="{StaticResource DocumentTableStyle}">
      <TextBlock Style="{StaticResource DocumentTableTextStyle}" Text="{Binding PrefixedLanguageCode}" />
    </Border>
    <Border Grid.Column="3" Style="{StaticResource DocumentTableStyle}">
      <TextBlock Style="{StaticResource DocumentTableTextStyle}" Text="{Binding TypeCode}" />
    </Border>
    <Border Grid.Column="4" Style="{StaticResource DocumentTableStyle}">
      <TextBlock Style="{StaticResource DocumentTableTextStyle}" Text="{Binding DataContext.ProductType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type documentViews:DocumentsView}}}" />
    </Border>
    <Border Grid.Column="5" Style="{StaticResource DocumentTableStyle}">
      <TextBlock Style="{StaticResource DocumentTableTextStyle}" Text="{Binding PublishedDate}" />
    </Border>
  </Grid>
</UserControl>
