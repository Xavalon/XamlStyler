jobs:
- job: BuildRiderExtension

  displayName: 'Build Rider Plugin'

  pool:
    vmImage: 'windows-latest'

  variables:
    pluginVersion: $(Build.BuildNumber)

  continueOnError: true

  steps:
  - checkout: self
    fetchDepth: 0

  - task: PowerShell@2
    displayName: 'Check for Rider project changes'
    condition: eq(variables['checkRiderChanges'], true)
    inputs:
      targetType: 'inline'
      pwsh: true
      script: |
        #$folderPath = '**/XamlStyler.Extension.Rider/*'
        $folderPath = '**/pipelines/*'
        $changedFiles = git diff master..HEAD --name-only -- $folderPath

        if ($changedFiles.Count -gt 0) {
          Write-Host "Changes detected in Rider project:"
          $changedFiles | ForEach-Object { Write-Host $_ }
          # Set a variable to indicate changes
          Write-Host "##vso[task.setvariable variable=ChangesDetected;isOutput=true]true"
        } else {
          Write-Host "No changes detected in Rider project"
          # Set a variable to indicate no changes
          Write-Host "##vso[task.setvariable variable=ChangesDetected;isOutput=true]false"
        }
  
  - task: NuGetToolInstaller@1
    displayName: 'Install NuGet Tools'
    condition: eq(variables['ChangesDetected'], 'true')

  - task: NuGetCommand@2
    displayName: 'NuGet Restore'
    condition: eq(variables['ChangesDetected'], 'true')
    inputs:
      command: custom
      arguments: restore src/XamlStyler.Rider.sln -Verbosity Detailed -NonInteractive

  - task: Gradle@2
    displayName: Build
    condition: eq(variables['ChangesDetected'], 'true')
    inputs:
      workingDirectory: '$(Pipeline.Workspace)\s\src\XamlStyler.Extension.Rider'
      gradleWrapperFile: '$(Pipeline.Workspace)\s\src\XamlStyler.Extension.Rider\gradlew.bat'
      gradleOptions: '-Xmx3072m'
      options: '-PPluginVersion=$(pluginVersion)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.21'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'buildPlugin'

  - task: CopyFiles@2
    displayName: Copy Artifacts to Staging
    condition: eq(variables['ChangesDetected'], 'true')
    inputs:
      contents: '$(Pipeline.Workspace)\s\src\XamlStyler.Extension.Rider\output\**\*.zip'
      targetFolder: $(Build.ArtifactStagingDirectory)
      cleanTargetFolder: true
      overWrite: true
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: Publish artifacts
    condition: eq(variables['ChangesDetected'], 'true')
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: 'XamlStyler.Extension.Rider'
